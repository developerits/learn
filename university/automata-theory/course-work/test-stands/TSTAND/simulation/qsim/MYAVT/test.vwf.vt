// Copyright (C) 2019  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "06/12/2020 20:01:46"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          tstand
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module tstand_vlg_vec_tst();
// constants                                           
// general purpose registers
reg clk;
reg clr;
reg en;
// wires                                               
wire rez;
wire rez_mura;
wire rez_y;
wire [1:0] s_true;
wire t1;
wire t2;
wire tt1;
wire tt2;
wire tt3;
wire x1;
wire x2;
wire y1;
wire y2;
wire y3;
wire [2:0] y_true;
wire yy1;
wire yy2;
wire yy3;

// assign statements (if any)                          
tstand i1 (
// port map - connection between master ports and signals/registers   
	.clk(clk),
	.clr(clr),
	.en(en),
	.rez(rez),
	.rez_mura(rez_mura),
	.rez_y(rez_y),
	.s_true(s_true),
	.t1(t1),
	.t2(t2),
	.tt1(tt1),
	.tt2(tt2),
	.tt3(tt3),
	.x1(x1),
	.x2(x2),
	.y1(y1),
	.y2(y2),
	.y3(y3),
	.y_true(y_true),
	.yy1(yy1),
	.yy2(yy2),
	.yy3(yy3)
);
initial 
begin 
#1000000 $stop;
end 

// clk
always
begin
	clk = 1'b0;
	clk = #5000 1'b1;
	#5000;
end 

// clr
initial
begin
	clr = 1'b0;
	clr = #10000 1'b1;
end 

// en
initial
begin
	en = 1'b0;
	en = #10000 1'b1;
end 
endmodule

